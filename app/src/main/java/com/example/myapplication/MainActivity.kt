package com.example.myapplication

import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    private lateinit var editTextLogin: EditText
    private lateinit var editTextPassword: EditText
    private lateinit var buttonLogin: Button
    private lateinit var buttonOpenList: Button
    private lateinit var textViewResult: TextView

    // üö® –õ–ê–£–ù–ß–ï–† –î–õ–Ø –û–ñ–ò–î–ê–ù–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–ê –ò–ó SimpleListActivity
    private val openListForResult = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->
        if (result.resultCode == RESULT_OK) {
            val selectedName = result.data?.getStringExtra("SELECTED_ITEM")
            if (selectedName != null) {
                textViewResult.text = "–í—ã–±—Ä–∞–Ω–æ –∏–∑ —Å–ø–∏—Å–∫–∞: $selectedName"
                Toast.makeText(this, "–í—ã–±—Ä–∞–Ω–æ: $selectedName", Toast.LENGTH_SHORT).show()
            }
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        Log.d("Lifecycle", "onCreate: Activity —Å–æ–∑–¥–∞–Ω–∞")

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ UI
        editTextLogin = findViewById(R.id.editTextLogin)
        editTextPassword = findViewById(R.id.editTextPassword)
        buttonLogin = findViewById(R.id.buttonLogin)
        buttonOpenList = findViewById(R.id.buttonOpenList)
        textViewResult = findViewById(R.id.textViewResult)

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–æ–π—Ç–∏"
        buttonLogin.setOnClickListener {
            handleLoginClick()
        }

        // üö® –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫"
        buttonOpenList.setOnClickListener {
            val login = editTextLogin.text.toString().trim()
            if (login.isEmpty()) {
                Toast.makeText(this, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫", Toast.LENGTH_SHORT).show()
                return@setOnClickListener
            }

            // üëá –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ SimpleListActivity —á–µ—Ä–µ–∑ Intent
            val intent = Intent(this, SimpleListActivity::class.java).apply {
                putExtra("SENDER_LOGIN", login) // –ü–µ—Ä–µ–¥–∞—ë–º –ª–æ–≥–∏–Ω –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ
            }
            openListForResult.launch(intent) // –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –∂–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        }
    }

    private fun handleLoginClick() {
        val login = editTextLogin.text.toString().trim()
        val password = editTextPassword.text.toString().trim()

        if (login.isEmpty()) {
            Toast.makeText(this, R.string.toast_error_login, Toast.LENGTH_SHORT).show()
            return
        }

        if (password.isEmpty()) {
            Toast.makeText(this, R.string.toast_error_password, Toast.LENGTH_SHORT).show()
            return
        }

        val message = getString(R.string.toast_login_success, login, "*".repeat(password.length))
        Toast.makeText(this, message, Toast.LENGTH_SHORT).show()

        textViewResult.text = "–í–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–õ–æ–≥–∏–Ω: $login\n–ü–∞—Ä–æ–ª—å: ${"*".repeat(password.length)}"
    }

    // –ñ–ò–ó–ù–ï–ù–ù–´–ô –¶–ò–ö–õ ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
    override fun onStart() { super.onStart(); Log.d("Lifecycle", "onStart: Activity –≤–∏–¥–∏–º–∞") }
    override fun onResume() { super.onResume(); Log.d("Lifecycle", "onResume: Activity –∞–∫—Ç–∏–≤–Ω–∞") }
    override fun onPause() { super.onPause(); Log.d("Lifecycle", "onPause: Activity —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫—Ä—ã—Ç–∞") }
    override fun onStop() { super.onStop(); Log.d("Lifecycle", "onStop: Activity –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã—Ç–∞") }
    override fun onDestroy() { super.onDestroy(); Log.d("Lifecycle", "onDestroy: Activity —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞") }
    override fun onRestart() { super.onRestart(); Log.d("Lifecycle", "onRestart: Activity –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞") }
}